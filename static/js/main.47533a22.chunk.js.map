{"version":3,"sources":["reducers/product-reducer.js","context/productcontext.js","components/button.component.jsx","components/navbar.component.jsx","context/cartcontext.js","reducers/cart-utils.js","components/product-details.component.jsx","components/title.component.jsx","components/product-list.component.jsx","components/404.component.jsx","components/product-form.component.jsx","components/inventory.component.jsx","components/cart.component.jsx","components/checkout.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductReducer","state","action","type","id","uuid","title","product","description","img","price","inCart","count","filter","ProductContext","createContext","ProductContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","products","dispatch","useEffect","setItem","stringify","Provider","value","children","CartButton","styled","button","NavWrapper","nav","Navbar","className","to","src","alt","CartContext","cartItems","addItem","removeItem","clearItemFromCart","cartItemsCount","cartTotal","CartProvider","useState","setCartItems","setCartItemsCount","setCartTotal","useContext","reduce","accumalatedQuantity","cartItem","quantity","getCartItemsCount","getCartTotal","cartItemToAdd","find","map","addItemToCart","item","cartItemToRemove","removeItemFromCart","filterItemFromCart","ProductDetails","location","useLocation","style","maxWidth","maxHeight","pathname","onClick","aria-hidden","Title","ProductList","length","key","PageNotFound","ProductForm","setTitle","setDescription","setImg","setPrice","onSubmit","e","preventDefault","placeholder","onChange","target","required","Inventory","CartItem","width","height","Checkout","App","Fragment","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.47533a22.chunk.js","sourcesContent":["import {v4 as uuid} from 'uuid'\r\n\r\nexport const ProductReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD_PRODUCT':\r\n            return [...state, {\r\n                id: uuid(),\r\n                title: action.product.title,\r\n                description: action.product.description,\r\n                img: action.product.img,\r\n                price: action.product.price,\r\n                inCart: false,\r\n                count: 0\r\n            }]\r\n        case 'REMOVE_PRODUCT':\r\n            return state.filter(product => product.id !== action.id)\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer, useEffect } from 'react'\r\nimport { ProductReducer } from '../reducers/product-reducer'\r\n\r\nexport const ProductContext = createContext()\r\n\r\nconst ProductContextProvider = (props) => {\r\n    const [products, dispatch] = useReducer( ProductReducer, [], ()=> {\r\n        const localData = localStorage.getItem('products')\r\n        return localData ? JSON.parse(localData) : []\r\n    })\r\n        /*[\r\n        {\r\n            id: 1,\r\n            title: 'Store Item One',\r\n            img: '',\r\n            price: 12,\r\n            description: 'This is some demo text for item One',\r\n            inCart: false,\r\n            count: 0,\r\n            total: 0\r\n         },\r\n         {\r\n            id: 2,\r\n            title: 'Store Item One',\r\n            img: '',\r\n            price: 12,\r\n            description: 'This is some demo text for item One',\r\n            inCart: false,\r\n            count: 0,\r\n            total: 0\r\n         },\r\n         {\r\n            id: 3,\r\n            title: 'Store Item One',\r\n            img: '',\r\n            price: 12,\r\n            description: 'This is some demo text for item One',\r\n            inCart: false,\r\n            count: 0,\r\n            total: 0\r\n         }\r\n    ])*/\r\n    /*\r\n    const addProduct = (title, img, price, description) => {\r\n        setProducts([...products, {title, img, price, description, id: uuid(), inCart: false, count: 0}])\r\n    }\r\n    const removeProduct = (id) => {\r\n        setProducts(products.filter(product=> product.id !== id))\r\n    }\r\n    */\r\n   useEffect(()=> {\r\n       localStorage.setItem('products', JSON.stringify(products))\r\n   },[products])\r\n    return (\r\n        <ProductContext.Provider value={{products, dispatch}}>\r\n            {props.children}\r\n        </ProductContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProductContextProvider","import styled from 'styled-components'\r\n\r\nexport const CartButton = styled.button`\r\nfont-size: 1.3rem;\r\nbackground: transparent;\r\nborder: none;\r\nborder-radius: 0.5rem;\r\npadding: 0.2rem 0.5rem;\r\ncursor: pointer;\r\nmargin: 0.2rem 0.5rem 0.2rem 0;\r\ntransition: all 0.4s ease-in-out;\r\n&:hover{\r\n    background: var(--lightBlue);\r\n    color: var(--mainBlue)\r\n}\r\n&:focus{\r\n    outline: none;\r\n}\r\n`","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport {CartButton} from './button.component'\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <NavWrapper className= \"navbar navbar-expand-sm navbar-dark px-sm-5\">\r\n            <Link to = '/'>\r\n            <img src=\"https://img.icons8.com/color/96/000000/shop.png\" alt='shop brand'/>\r\n            </Link>\r\n            <ul className='navbar-nav align-items-center'>\r\n                <li className='nav-item ml-5'>\r\n                    <Link to='/' className='nav-link'>products</Link>\r\n                </li>\r\n                <li className='nav-item ml-5'>\r\n                    <Link to='/inventory' className='nav-link'>inventory</Link>\r\n                </li>\r\n            </ul>\r\n            <Link to='/checkout' className='ml-auto'>\r\n                <CartButton>\r\n                    <span className='mr-3'><i className=\"fas fa-cart-plus\" /></span>Cart\r\n                </CartButton>\r\n            </Link>\r\n            {/*<p>Choose from a collection of {products.length} products available with us</p>*/}\r\n        </NavWrapper>\r\n    )\r\n}\r\n\r\nconst NavWrapper = styled.nav`\r\n    background: var(--mainBlue);\r\n    .nav-link{\r\n        color: var(--mainWhite) !important;\r\n        font-size: 1.2rem;\r\n        text-transform: capitalize;\r\n    }\r\n`\r\n\r\nexport default Navbar","import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nimport {\r\n  addItemToCart,\r\n  removeItemFromCart,\r\n  filterItemFromCart,\r\n  getCartItemsCount,\r\n  getCartTotal\r\n} from '../reducers/cart-utils';\r\nimport { ProductContext } from './productcontext';\r\n\r\nexport const CartContext = createContext({\r\n  cartItems: [],\r\n  addItem: () => {},\r\n  removeItem: () => {},\r\n  clearItemFromCart: () => {},\r\n  cartItemsCount: 0,\r\n  cartTotal: 0\r\n});\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [cartItemsCount, setCartItemsCount] = useState(0);\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const {products} = useContext(ProductContext)\r\n\r\n  // const addItem = product => setCartItems(addItemToCart(cartItems, product));\r\n  const addItem = product => setCartItems(addItemToCart(cartItems, product));\r\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\r\n  const clearItemFromCart = item =>\r\n    setCartItems(filterItemFromCart(cartItems, item));\r\n\r\n  useEffect(() => {\r\n    setCartItemsCount(getCartItemsCount(cartItems));\r\n    setCartTotal(getCartTotal(cartItems));\r\n  }, [cartItems, products]);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartItems,\r\n        addItem,\r\n        removeItem,\r\n        clearItemFromCart,\r\n        cartItemsCount,\r\n        cartTotal\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n\r\nexport default CartProvider;","export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n    const existingCartItem = cartItems.find(\r\n      cartItem => cartItem.id === cartItemToAdd.id\r\n    );\r\n  \r\n    if (existingCartItem) {\r\n      return cartItems.map(cartItem =>\r\n        cartItem.id === cartItemToAdd.id\r\n          ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n          : cartItem\r\n      );\r\n    }\r\n  \r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n  };\r\n  \r\n  export const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    const existingCartItem = cartItems.find(\r\n      cartItem => cartItem.id === cartItemToRemove.id\r\n    );\r\n  \r\n    if (existingCartItem.quantity === 1) {\r\n      return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\r\n    }\r\n  \r\n    return cartItems.map(cartItem =>\r\n      cartItem.id === cartItemToRemove.id\r\n        ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n        : cartItem\r\n    );\r\n  };\r\n  \r\n  export const filterItemFromCart = (cartItems, item) =>\r\n    cartItems.filter(cartItem => cartItem.id !== item.id);\r\n  \r\n  export const getCartItemsCount = cartItems =>\r\n    cartItems.reduce(\r\n      (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity,\r\n      0\r\n    );\r\n  \r\n  export const getCartTotal = cartItems =>\r\n    cartItems.reduce(\r\n      (accumalatedQuantity, cartItem) =>\r\n        accumalatedQuantity + cartItem.quantity * cartItem.price,\r\n      0\r\n    );","import React, { useContext } from 'react'\r\nimport { ProductContext } from '../context/productcontext'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { CartContext } from '../context/cartcontext'\r\nimport { CartButton } from './button.component'\r\n\r\nconst ProductDetails = ({product}) => {\r\n    const {dispatch} = useContext(ProductContext)\r\n    const {addItem} = useContext(CartContext)\r\n    const location = useLocation()\r\n    return(\r\n        <>\r\n        <div className=\"card mb-3\">\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-md-4\">\r\n            <img src={product.img} style={{maxWidth: '540px', maxHeight: '200px'}} className=\"card-img\" alt=\"Product\" />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{product.title}</h5>\r\n              <p className=\"card-text\">{product.description}</p>\r\n              <p className=\"card-text\"><small className=\"text-muted\">{product.price} INR</small></p>\r\n              {location.pathname === '/inventory' && <p className=\"card-text d-flex justify-content-end\"> <CartButton onClick = {()=> dispatch({type: 'REMOVE_PRODUCT', id: product.id})}> <span className=\"badge badge-pill badge-danger\" ><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></span> </CartButton></p> }\r\n              {location.pathname === '/' && <p className=\"card-text\"> <CartButton  onClick = {()=> addItem(product)}><span className=\"badge badge-pill badge-success\"><i className=\"fas fa-cart-plus\"></i></span> Add to Cart</CartButton></p> }\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetails\r\n\r\n","import React from 'react'\r\n\r\nconst Title = ({title}) => {\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-10 mx-auto my-2 text-center text-title\">\r\n                <h1 className='text-capitalize font-weight-bold text-blue'>{title}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title","import React, { useContext } from 'react'\r\nimport { ProductContext } from '../context/productcontext'\r\nimport ProductDetails from './product-details.component'\r\nimport Title from './title.component'\r\n\r\nconst ProductList = () => {\r\n    const {products} = useContext(ProductContext)\r\n    return products.length ? ( \r\n        <>\r\n            <div className=\"container\">\r\n                <Title title='List of Products' />\r\n                    \r\n                {products.map(product => {\r\n                    return (<ProductDetails product={product} key= {product.id} />)\r\n                })}\r\n            </div>\r\n        </>\r\n        ) : \r\n    (\r\n        <h3 className = \"py-5 container-fluid text-center d-lg-block\">Add items to inventory to get started.</h3>\r\n    )\r\n}\r\n\r\nexport default ProductList\r\n\r\n\r\n","import React from 'react'\r\nimport Title from './title.component'\r\n\r\nconst PageNotFound = () => {\r\n    return(\r\n        <div className='container'>\r\n            <Title title= 'Error 404' />\r\n            <h3 className= 'py-5 container-fluid text-center d-lg-block'>Page Not Found <hr /> Sorry Mario! Your Princess is in another castle.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound","import React, { useContext, useState } from 'react'\r\nimport { ProductContext } from '../context/productcontext'\r\nimport { CartButton } from './button.component'\r\n\r\nconst ProductForm = () => {\r\n    const {dispatch} =  useContext(ProductContext)\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [img, setImg] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch({type: 'ADD_PRODUCT', product: {\r\n            title, description, img, price\r\n        }})\r\n        setPrice(0)\r\n        setTitle('')\r\n        setDescription('')\r\n        setImg('')\r\n    }\r\n    return(\r\n        <form onSubmit = {handleSubmit}>\r\n        <div className='container'>\r\n            <div className = 'py-5 px-2'>\r\n            <div className='form-group row'>\r\n                <div className= 'col'>\r\n                    <input type= \"text\" className='form-control' placeholder= \"Product Title\" value= {title} onChange = {(e)=> setTitle(e.target.value)} required />\r\n                </div>\r\n                <div className= 'col'>\r\n                    <input type= \"number\" className='form-control' placeholder= \"Product Price\" value= {price} onChange = {(e)=> setPrice(e.target.value)} required />\r\n                </div>\r\n            </div>\r\n            <div className='form-group row'>\r\n                <input type= \"url\" className='form-control' placeholder= \"Product Image URL\" value= {img} onChange = {(e)=> setImg(e.target.value)} required />\r\n            </div>\r\n            <div className= 'form-group row'>\r\n                <textarea className='form-control' placeholder= \"Product Description\" value= {description} onChange = {(e)=> setDescription(e.target.value)} required />\r\n            </div>\r\n            <div className = 'col-auto text-center'>\r\n            <CartButton type=\"submit\">\r\n            <span className=\"badge badge-pill badge-success\"><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\r\n            </CartButton>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        </form>\r\n     )\r\n}\r\n\r\nexport default ProductForm\r\n\r\n\r\n","import React from 'react'\r\nimport Title from './title.component'\r\nimport ProductForm from './product-form.component'\r\nimport ProductList from './product-list.component'\r\n\r\nconst Inventory = () => {\r\n    return(\r\n        <>\r\n            <div className='container'>\r\n                <Title title='inventory' />\r\n                <div className=\"card mb-3\">\r\n                    <ProductForm />\r\n                </div>\r\n            </div>\r\n            <div className= 'container'>\r\n            <ProductList />\r\n        </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Inventory","import React, { useContext } from \"react\";\r\nimport { CartContext } from \"../context/cartcontext\";\r\nimport { CartButton } from \"./button.component\";\r\n\r\nconst CartItem = ({ cartItem }) => {\r\n  const { title, img, price, quantity } = cartItem;\r\n  const { addItem, removeItem, clearItemFromCart } = useContext(CartContext);\r\n\r\n  return (\r\n    <div className=\"card mb-3 border-0 py-2 px-2\">\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-md-2\">\r\n          <img\r\n            src={img}\r\n            style={{ width: \"5rem\", height: \"5rem\" }}\r\n            className=\"img-fluid\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-10\">\r\n          <div className=\"d-flex justify-content-around\">\r\n            <h5>{title}</h5>\r\n            <span className=\"d-flex\">\r\n              <div\r\n                className=\"d-flex justify-content-center arrow\"\r\n                onClick={() => removeItem(cartItem)}\r\n              >\r\n                &#10094;\r\n              </div>\r\n              <span>{quantity}</span>\r\n              <div className=\"arrow\" onClick={() => addItem(cartItem)}>\r\n                &#10095;\r\n              </div>\r\n            </span>\r\n            <span>{price}</span>\r\n            <p className=\"card-text d-flex justify-content-end\">\r\n              <CartButton\r\n              onClick={() => clearItemFromCart(cartItem)}\r\n              >\r\n                <span className=\"badge badge-pill badge-danger\">\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                </span>\r\n              </CartButton>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n\r\n\r\n","import React, { useContext } from 'react';\r\n\r\nimport {CartContext} from '../context/cartcontext'\r\nimport CartItem from './cart.component';\r\nimport Title from './title.component';\r\n\r\nconst Checkout = () => {\r\n    const { cartItems, cartTotal } = useContext(CartContext);\r\n  \r\n    return cartItems.length ? ( \r\n      <div className='container-fluid text-center'>\r\n      <Title title= 'Shopping Cart' />\r\n      <div className='card mb-3'>\r\n        <div className='row card-header bg-transaparent'>\r\n          <div className='col-10 mx-auto col-lg-2'>\r\n            <span></span>\r\n          </div>\r\n          <div className='col-10 mx-auto col-lg-2'>\r\n            <span>Product Name</span>\r\n          </div>\r\n          <div className='col-10 mx-auto col-lg-2'>\r\n            <span>Quantity</span>\r\n          </div>\r\n          <div className='col-10 mx-auto col-lg-2'>\r\n            <span>Price/Unit</span>\r\n          </div>\r\n          <div className='col-10 mx-auto col-lg-2'>\r\n            <span>Remove</span>\r\n          </div>\r\n        </div>\r\n        {cartItems.map(cartItem => (\r\n          <CartItem key={cartItem.id} cartItem={cartItem} />\r\n        ))}\r\n        <h3 className='card-footer bg-transparent'>TOTAL: {cartTotal} INR</h3>\r\n      </div>\r\n      </div>\r\n    ) : (\r\n        <><h3 className = \"py-5 container-fluid text-center d-lg-block\"><span>&#128722;</span>Your cart is currently empty.<hr/> Please visit products section to select from our wide range of offerings.</h3></>\r\n    );\r\n  };\r\n  \r\n  export default Checkout;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport ProductContextProvider from './context/productcontext';\nimport Navbar from './components/navbar.component';\nimport ProductList from './components/product-list.component';\nimport PageNotFound from './components/404.component';\nimport Inventory from './components/inventory.component';\nimport Checkout from './components/checkout.component';\nimport CartProvider from './context/cartcontext';\n\nfunction App() {\n  return (\n      <React.Fragment>\n        <ProductContextProvider>\n          <Navbar />\n          <CartProvider>\n          <Switch>\n            <Route exact path= '/' component={ProductList} />\n            <Route path= '/inventory' component={Inventory} />\n            <Route path= '/checkout' component= {Checkout} />\n            <Route component = {PageNotFound} />\n          </Switch>\n          </CartProvider>\n        </ProductContextProvider>\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}